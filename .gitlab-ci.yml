variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME


stages:
  - build
  - setup
  - test
  - merge-to-dev
  - dev-deploy


build-job:
  stage: build
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
    - docker build -t ${IMAGE_NAME} .
    - docker push ${IMAGE_NAME}
  tags:
    - backend
  only:
    - feature

setup-job:
  stage: setup
  image: ubuntu:latest
  dependencies:
    - build-job
  script:
    - apt-get update
    - apt-get install -y openssl
    - mkdir -p certs env_files
    - touch env_files/.env env_files/.env.db env_files/.env.email env_files/.env.tasks
    - openssl genrsa -out certs/jwt-private.pem 2048
    - openssl rsa -in certs/jwt-private.pem -outform PEM -pubout -out certs/jwt-public.pem
    - cat "$ENV_FILE" > env_files/.env
    - cat "$ENV_FILE_DB" > env_files/.env.db
    - cat "$ENV_FILE_EMAIL" > env_files/.env.email
    - cat "$ENV_FILE_TASKS" > env_files/.env.tasks
  artifacts:
    paths:
      - certs/
      - env_files/
  tags:
    - backend
  only:
    - feature


test-job:
  stage: test
  dependencies:
    - setup-job
  script:
    - docker pull ${IMAGE_NAME}
    - IMAGE_NAME=${IMAGE_NAME} docker-compose up -d
    - docker-compose exec backend pytest tests/v1/admin/test_admin_environment_setup.py
    - docker-compose exec backend pytest tests/v1/admin/test_admin_protected.py
    - docker-compose exec backend pytest tests/v1/stuff/test_stuff_environment_setup.py
    - docker-compose exec backend pytest tests/v1/stuff/test_stuff_protected.py
    - docker-compose exec backend pytest tests/v1/email/test_email_environment_setup.py
    - docker-compose exec backend pytest tests/v1/email/test_email_reset_password.py
    - docker-compose exec backend pytest tests/v1/email/test_email_verification_code.py
    - docker-compose exec backend pytest tests/v1/auth/test_auth_environment_setup.py
    - docker-compose exec backend pytest tests/v1/auth/test_auth_signup.py
    - docker-compose exec backend pytest tests/v1/auth/test_auth_login.py
    - docker-compose exec backend pytest tests/v1/auth/test_auth_reset_password.py
    - docker-compose exec backend pytest tests/v1/auth/test_auth_protected.py
    - docker-compose exec backend pytest tests/v1/jwt/test_jwt_environment_setup.py
    - docker-compose exec backend pytest tests/v1/jwt/test_jwt_refresh.py
    - docker-compose down
  tags:
    - backend
  only:
    - feature


merge-to-dev-job:
  dependencies:
    - test-job
  stage: merge-to-dev
  image: ubuntu:latest
  script:
    - git checkout dev
    - git fetch origin
    - git merge origin/feature --no-commit --no-ff
    - git push origin dev
  tags:
    - backend
  only:
    - feature


dev-deploy-job:
  stage: dev-deploy
  script:
    - IMAGE_NAME=${IMAGE_NAME} docker-compose up -d
  only:
    - dev

